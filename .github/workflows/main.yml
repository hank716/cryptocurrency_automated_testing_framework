name: Crypto QA Framework CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - api
          - web
          - performance

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black
          pip install -r requirements.txt
          
      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Run pylint
        run: |
          pylint --disable=C0111,C0103,C0303,W0621,R0913,R0914 api_tests web_tests performance_tests utils
          
      - name: Check formatting with black
        run: |
          black --check .

  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    needs: code-quality
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'api' || github.event.inputs.test_type == '' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run API tests
        run: |
          pytest api_tests/ -v --html=reports/api_test_report.html
          
      - name: Upload API test report
        uses: actions/upload-artifact@v3
        with:
          name: api-test-report
          path: reports/api_test_report.html

  web-tests:
    name: Web UI Tests
    runs-on: ubuntu-latest
    needs: code-quality
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'web' || github.event.inputs.test_type == '' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
      - name: Run Web UI tests
        run: |
          pytest web_tests/ -v --html=reports/web_test_report.html
          
      - name: Upload Web UI test report
        uses: actions/upload-artifact@v3
        with:
          name: web-test-report
          path: |
            reports/web_test_report.html
            reports/screenshots/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: code-quality
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'performance' || github.event.inputs.test_type == '' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run API load tests
        run: |
          cd performance_tests
          python -m locust -f locustfiles/api_load_test.py --headless -u 10 -r 1 -t 1m --host https://sandbox-api.coinmarketcap.com
          
      - name: Run stress tests
        run: |
          cd performance_tests
          python -m locust -f locustfiles/stress_test.py --headless -u 20 -r 5 -t 30s --host https://sandbox-api.coinmarketcap.com
          
      - name: Upload performance test reports
        uses: actions/upload-artifact@v3
        with:
          name: performance-test-reports
          path: performance_tests/reports/

  notify:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [api-tests, web-tests, performance-tests]
    if: always()
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: all-artifacts
          
      - name: Send notification
        run: |
          ./utils/notify.sh
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
          
  deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [api-tests, web-tests, performance-tests]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material
          
      - name: Build documentation
        run: |
          mkdocs build
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
